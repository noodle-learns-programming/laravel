{"version":3,"sources":["components.js","app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["'use strict';\n\nvar Breadcrumb = React.createClass({\n  displayName: 'Breadcrumb',\n  getInitialState: function getInitialState() {\n    return {\n      fragment: '',\n      route: 'Dashboard'\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    this.props.router.on(\"route\", this.onRoute);\n  },\n  componentDidUpdate: function componentDidUpdate() {\n    //this.props.router.off(\"route\");\n  },\n\n  onRoute: function onRoute(route, params) {\n    var fragment = Backbone.history.getFragment();\n    this.setState({\n      fragment: fragment,\n      route: route,\n      params: params\n    });\n  },\n  render: function render() {\n    var arrFragments = [];\n    if (this.state.fragment) {\n      arrFragments = this.state.fragment.split('/');\n    }\n    var href = '';\n    return React.createElement(\n      'div',\n      { className: 'ui breadcrumb' },\n      React.createElement(\n        'a',\n        { className: 'section', href: '#' },\n        Lang.get('common.dashboard')\n      ),\n      arrFragments.map(function (fragment, i) {\n        {\n          href += (href ? '/' : '') + fragment;\n        }\n        return [React.createElement(\n          'div',\n          { className: 'divider' },\n          ' / '\n        ), React.createElement(\n          'a',\n          { className: 'active section', href: \"#\" + href },\n          Lang.get('common.' + fragment)\n        )];\n      })\n    );\n  }\n});\nvar Dashboard = React.createClass({\n  displayName: 'Dashboard',\n  getInitialState: function getInitialState() {\n    return {\n      value: null\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    $('.ui.selection.dropdown').dropdown({\n      dataType: 'jsonp',\n      apiSettings: {\n        onResponse: function onResponse(githubResponse) {\n          var response = {\n            results: []\n          };\n          // translate github api response to work with dropdown\n          $.each(githubResponse.items, function (index, item) {\n            response.results.push({\n              name: item.name,\n              value: item.id\n            });\n          });\n          return response;\n        },\n        url: '//api.github.com/search/repositories?q={query}'\n      },\n      onChange: function onChange(value) {\n        _this.setState({\n          value: value\n        });\n      }\n    });\n  },\n  componentDidUpdate: function componentDidUpdate() {\n    $('.ui.dropdown').dropdown('refresh');\n  },\n\n  render: function render() {\n    return React.createElement(\n      'div',\n      null,\n      React.createElement(\n        'div',\n        null,\n        React.createElement(\n          'h2',\n          null,\n          'Dashboard page'\n        )\n      )\n    );\n  }\n});\nvar Product = React.createClass({\n  displayName: 'Product',\n  getInitialState: function getInitialState() {\n    return {\n      value: null\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    var _this2 = this;\n\n    $('.ui.selection.dropdown').dropdown({\n      dataType: 'jsonp',\n      apiSettings: {\n        onResponse: function onResponse(githubResponse) {\n          var response = {\n            results: []\n          };\n          // translate github api response to work with dropdown\n          $.each(githubResponse.items, function (index, item) {\n            response.results.push({\n              name: item.name,\n              value: item.id\n            });\n          });\n          return response;\n        },\n        url: '//api.github.com/search/repositories?q={query}'\n      },\n      onChange: function onChange(value) {\n        _this2.setState({\n          value: value\n        });\n      }\n    });\n  },\n  componentDidUpdate: function componentDidUpdate() {\n    $('.ui.dropdown').dropdown('refresh');\n  },\n\n  render: function render() {\n    return React.createElement(\n      'form',\n      null,\n      React.createElement(\n        'h2',\n        { className: 'ui header' },\n        React.createElement('img', { className: 'ui image', src: '/image/school.png' }),\n        React.createElement(\n          'div',\n          { className: 'content' },\n          Lang.get('product.add')\n        )\n      ),\n      React.createElement(\n        'div',\n        { className: 'ui form' },\n        React.createElement(\n          'div',\n          { className: 'field' },\n          React.createElement(\n            'label',\n            null,\n            Lang.get('product.name')\n          ),\n          React.createElement('input', { placeholder: Lang.get('product.name'), type: 'text' })\n        ),\n        React.createElement(\n          'div',\n          { className: 'two fields' },\n          React.createElement(\n            'div',\n            { className: 'field' },\n            React.createElement(\n              'label',\n              null,\n              Lang.get('product.sku')\n            ),\n            React.createElement('input', { placeholder: Lang.get('product.sku'), type: 'text' })\n          ),\n          React.createElement(\n            'div',\n            { className: 'field' },\n            React.createElement(\n              'label',\n              null,\n              Lang.get('product.series')\n            ),\n            React.createElement('input', { placeholder: Lang.get('product.series'), type: 'text' })\n          )\n        ),\n        React.createElement(\n          'div',\n          { className: 'two fields' },\n          React.createElement(\n            'div',\n            { className: 'field' },\n            React.createElement(\n              'label',\n              null,\n              Lang.get('product.brand')\n            ),\n            React.createElement('input', { placeholder: Lang.get('product.brand'), type: 'text' })\n          ),\n          React.createElement(\n            'div',\n            { className: 'field' },\n            React.createElement(\n              'label',\n              null,\n              Lang.get('product.unit')\n            ),\n            React.createElement('input', { placeholder: Lang.get('product.unit'), type: 'text' })\n          )\n        ),\n        React.createElement(\n          'div',\n          { className: 'ui submit button' },\n          'Submit'\n        )\n      )\n    );\n  }\n});\n//# sourceMappingURL=components.js.map\n","'use strict';\n\n$('.ui.sidebar').sidebar({\n\tcontext: $('.bottom.segment'),\n\tdimPage: false\n}).sidebar('attach events', '#sidebar');\n\nLang.setLocale('vi');\n\nwindow.App = {\n\tModels: {},\n\tRouter: {},\n\tinit: function init() {\n\t\tthis.router = new App.Router();\n\t\treturn this;\n\t},\n\trun: function run() {\n\t\tReactDOM.render(React.createElement(Breadcrumb, { router: this.router }), document.getElementById('breadcrumb'));\n\t\tBackbone.history.start();\n\t\treturn this;\n\t}\n};\nApp.Router = Backbone.Router.extend({\n\troutes: {\n\t\t'': 'dashboard',\n\t\t'stock/product': 'product'\n\t},\n\tdashboard: function dashboard() {\n\t\tReactDOM.render(React.createElement(Dashboard, null), document.getElementById('main'));\n\t},\n\tproduct: function product() {\n\t\tReactDOM.render(React.createElement(Product, null), document.getElementById('main'));\n\t}\n});\n\nApp.init().run();\n//# sourceMappingURL=app.js.map\n"],"sourceRoot":"/source/"}