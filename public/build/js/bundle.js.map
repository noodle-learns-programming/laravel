{"version":3,"sources":["components.js","app.js"],"names":[],"mappingszIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["'use strict';\n\nvar Dashboard = React.createClass({\n    displayName: 'Dashboard',\n    getInitialState: function getInitialState() {\n        return {\n            value: null\n        };\n    },\n    componentDidMount: function componentDidMount() {\n        var _this = this;\n\n        $('.ui.selection.dropdown').dropdown({\n            dataType: 'jsonp',\n            apiSettings: {\n                onResponse: function onResponse(githubResponse) {\n                    var response = {\n                        results: []\n                    };\n                    // translate github api response to work with dropdown\n                    $.each(githubResponse.items, function (index, item) {\n                        response.results.push({\n                            name: item.name,\n                            value: item.id\n                        });\n                    });\n                    return response;\n                },\n                url: '//api.github.com/search/repositories?q={query}'\n            },\n            onChange: function onChange(value) {\n                _this.setState({\n                    value: value\n                });\n            }\n        });\n    },\n    componentDidUpdate: function componentDidUpdate() {\n        $('.ui.dropdown').dropdown('refresh');\n    },\n\n    render: function render() {\n        return React.createElement(\n            'div',\n            null,\n            React.createElement(\n                'div',\n                null,\n                React.createElement(\n                    'h2',\n                    null,\n                    'Dashboard page'\n                )\n            )\n        );\n    }\n});\nvar Product = React.createClass({\n    displayName: 'Product',\n    getInitialState: function getInitialState() {\n        return {\n            value: null\n        };\n    },\n    componentDidMount: function componentDidMount() {\n        var _this2 = this;\n\n        $('.ui.selection.dropdown').dropdown({\n            dataType: 'jsonp',\n            apiSettings: {\n                onResponse: function onResponse(githubResponse) {\n                    var response = {\n                        results: []\n                    };\n                    // translate github api response to work with dropdown\n                    $.each(githubResponse.items, function (index, item) {\n                        response.results.push({\n                            name: item.name,\n                            value: item.id\n                        });\n                    });\n                    return response;\n                },\n                url: '//api.github.com/search/repositories?q={query}'\n            },\n            onChange: function onChange(value) {\n                _this2.setState({\n                    value: value\n                });\n            }\n        });\n    },\n    componentDidUpdate: function componentDidUpdate() {\n        $('.ui.dropdown').dropdown('refresh');\n    },\n\n    render: function render() {\n        return React.createElement(\n            'div',\n            null,\n            React.createElement(\n                'div',\n                null,\n                React.createElement(\n                    'h2',\n                    null,\n                    'Dropdown'\n                ),\n                React.createElement(\n                    'div',\n                    { className: 'ui fluid multiple search selection dropdown' },\n                    React.createElement('input', { type: 'hidden', name: 'repo-ids' }),\n                    React.createElement(\n                        'div',\n                        { className: 'default text' },\n                        'Select Repos'\n                    ),\n                    React.createElement('i', { className: 'dropdown icon' }),\n                    React.createElement('div', { className: 'menu' })\n                )\n            ),\n            React.createElement(\n                'div',\n                null,\n                React.createElement('div', { className: 'ui divider' }),\n                React.createElement(\n                    'b',\n                    null,\n                    'Selected value'\n                ),\n                ' ',\n                this.state.value\n            )\n        );\n    }\n});\n//# sourceMappingURL=components.js.map\n","'use strict';\n\n$('.ui.sidebar').sidebar({\n\tcontext: $('.bottom.segment'),\n\tdimPage: false\n}).sidebar('attach events', '#sidebar');\n\nwindow.App = {\n\tModels: {},\n\tCollections: {},\n\tViews: {},\n\tRouter: {}\n};\nApp.Router = Backbone.Router.extend({\n\troutes: {\n\t\t'': 'index',\n\t\t'product': 'product'\n\t},\n\tindex: function index() {\n\t\tReactDOM.render(React.createElement(Dashboard, null), document.getElementById('main'));\n\t},\n\tproduct: function product() {\n\t\tReactDOM.render(React.createElement(Product, null), document.getElementById('main'));\n\t}\n});\n\nnew App.Router();\nBackbone.history.start();\n//# sourceMappingURL=app.js.map\n"],"sourceRoot":"/source/"}