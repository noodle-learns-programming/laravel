{"version":3,"sources":["product.js","app.js"],"names":[],"mappings":";;AAAA,IAAA,OAAA,GAAA,KAAA,CAAA,WAAA,CAAA;;AACA,mBAAA,6BAAA;AACA,eAAA;AACA,iBAAA,EAAA,IAAA;SACA,CAAA;KACA;AAEA,qBAAA,+BAAA;;;AACA,SAAA,CAAA,wBAAA,CAAA,CAAA,QAAA,CAAA;AACA,oBAAA,EAAA,OAAA;AACA,uBAAA,EAAA;AACA,0BAAA,EAAA,oBAAA,cAAA,EAAA;AACA,wBACA,QAAA,GAAA;AACA,+BAAA,EAAA,EAAA;qBACA;;AACA,AAEA,qBAAA,CAAA,IAAA,CAAA,cAAA,CAAA,KAAA,EAAA,UAAA,KAAA,EAAA,IAAA,EAAA;AACA,gCAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,gCAAA,EAAA,IAAA,CAAA,IAAA;AACA,iCAAA,EAAA,IAAA,CAAA,EAAA;yBACA,CAAA,CAAA;qBACA,CAAA,CAAA;AACA,2BAAA,QAAA,CAAA;iBACA;AACA,mBAAA,EAAA,gDAAA;aACA;AACA,oBAAA,EAAA,kBAAA,KAAA,EAAA;AACA,sBAAA,QAAA,CAAA;AACA,yBAAA,EAAA,KAAA;iBACA,CAAA,CAAA;aACA;SACA,CAAA,CAAA;KACA;AAEA,sBAAA,gCAAA;AACA,SAAA,CAAA,cAAA,CAAA,CAAA,QAAA,CAAA,SAAA,CAAA,CAAA;KACA;;AAEA,UAAA,EAAA,kBAAA;AACA,eACA;;;YACA;;;gBACA;;;;iBAAA;gBACA;;sBAAA,SAAA,EAAA,6CAAA;oBACA,+BAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,GAAA;oBACA;;0BAAA,SAAA,EAAA,cAAA;;qBAAA;oBACA,2BAAA,SAAA,EAAA,eAAA,GAAA;oBACA,6BAAA,SAAA,EAAA,MAAA,GACA;iBACA;aACA;YACA;;;gBACA,6BAAA,SAAA,EAAA,YAAA,GAAA;gBACA;;;;iBAAA;;gBAAA,IAAA,CAAA,KAAA,CAAA,KAAA;aACA;SACA,CACA;KACA;CACA,CAAA,CAAA;AC5DA,CAAA,YAAA;;AAEA,UAAA,CAAA,GAAA,GAAA;AACA,cAAA,EAAA,EAAA;AACA,mBAAA,EAAA,EAAA;AACA,aAAA,EAAA,EAAA;AACA,cAAA,EAAA,EAAA;KACA,CAAA;AACA,OAAA,CAAA,MAAA,GAAA,QAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AACA,cAAA,EAAA;AACA,cAAA,EAAA,OAAA;SACA;AACA,aAAA,EAAA,iBAAA;AACA,oBAAA,CAAA,MAAA,CAAA,oBAAA,OAAA,OAAA,EAAA,QAAA,CAAA,cAAA,CAAA,MAAA,CAAA,CAAA,CAAA;SACA;KACA,CAAA,CAAA;;AAEA,QAAA,GAAA,CAAA,MAAA,EAAA,CAAA;AACA,YAAA,CAAA,OAAA,CAAA,KAAA,EAAA,CAAA;;AAEA,KAAA,CAAA,aAAA,CAAA,CAAA,OAAA,CAAA;AACA,eAAA,EAAA,CAAA,CAAA,iBAAA,CAAA;AACA,eAAA,EAAA,KAAA;KACA,CAAA,CAAA,OAAA,CAAA,eAAA,EAAA,UAAA,CAAA,CAAA;CAEA,CAAA,EAAA,CAAA","file":"all.js","sourcesContent":["var Product = React.createClass({\n    getInitialState() {\n        return {\n            value: null\n        };\n    },\n\n    componentDidMount() {\n      $('.ui.selection.dropdown').dropdown({\n        dataType: 'jsonp',\n        apiSettings   : {\n          onResponse: function(githubResponse) {\n            var\n              response = {\n                results : []\n              }\n            ;\n            // translate github api response to work with dropdown\n            $.each(githubResponse.items, function(index, item) {\n              response.results.push({\n                name: item.name,\n                value: item.id\n              });\n            });\n            return response;\n          },\n          url: '//api.github.com/search/repositories?q={query}'\n        },\n        onChange: (value) => {\n          this.setState({\n              value\n          });\n        }\n      });\n    },\n\n    componentDidUpdate() {\n        $('.ui.dropdown').dropdown('refresh');\n    },\n\n    render: function() {\n        return (\n            <div>\n                <div>\n                    <h2>Dropdown</h2>\n                    <div className=\"ui fluid multiple search selection dropdown\">\n                        <input type=\"hidden\" name=\"repo-ids\" />\n                        <div className=\"default text\">Select Repos</div>\n                        <i className=\"dropdown icon\"></i>\n                        <div className=\"menu\">\n                        </div>\n                    </div>\n                 </div>\n                <div>\n                    <div className=\"ui divider\"></div>\n                    <b>Selected value</b> {this.state.value}\n                </div>\n            </div>\n        );\n    }\n});","(function(){\n\nwindow.App = {\n\tModels: {},\n\tCollections: {},\n\tViews: {},\n\tRouter: {}\n};\nApp.Router = Backbone.Router.extend({\n\troutes: {\n\t\t'': 'index'\n\t},\n\tindex: function(){\n\t\tReactDOM.render(<Product />, document.getElementById('main'));\n\t}\n});\n\nnew App.Router;\nBackbone.history.start();\n\n$('.ui.sidebar').sidebar({\n\tcontext\t: $('.bottom.segment'),\n\tdimPage : false\n}).sidebar('attach events', '#sidebar');\n\n})();"],"sourceRoot":"/source/"}