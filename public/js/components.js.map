{"version":3,"sources":["dashboard.js","product.js"],"names":[],"mappings":"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","file":"components.js","sourcesContent":["var Dashboard = React.createClass({\n    getInitialState() {\n        return {\n            value: null\n        };\n    },\n\n    componentDidMount() {\n      $('.ui.selection.dropdown').dropdown({\n        dataType: 'jsonp',\n        apiSettings   : {\n          onResponse: function(githubResponse) {\n            var\n              response = {\n                results : []\n              }\n            ;\n            // translate github api response to work with dropdown\n            $.each(githubResponse.items, function(index, item) {\n              response.results.push({\n                name: item.name,\n                value: item.id\n              });\n            });\n            return response;\n          },\n          url: '//api.github.com/search/repositories?q={query}'\n        },\n        onChange: (value) => {\n          this.setState({\n              value\n          });\n        }\n      });\n    },\n\n    componentDidUpdate() {\n        $('.ui.dropdown').dropdown('refresh');\n    },\n\n    render: function() {\n        return (\n            <div>\n                <div>\n                    <h2>Dashboard page</h2>\n                </div>\n            </div>\n        );\n    }\n});","var Product = React.createClass({\n  getInitialState() {\n    return {\n        value: null\n    };\n  },\n\n  componentDidMount() {\n    $('.ui.selection.dropdown').dropdown({\n      dataType: 'jsonp',\n      apiSettings   : {\n        onResponse: function(githubResponse) {\n          var\n            response = {\n              results : []\n            }\n          ;\n          // translate github api response to work with dropdown\n          $.each(githubResponse.items, function(index, item) {\n            response.results.push({\n              name: item.name,\n              value: item.id\n            });\n          });\n          return response;\n        },\n        url: '//api.github.com/search/repositories?q={query}'\n      },\n      onChange: (value) => {\n        this.setState({\n            value\n        });\n      }\n    });\n  },\n\n  componentDidUpdate() {\n    $('.ui.dropdown').dropdown('refresh');\n  },\n\n  render: function() {\n    return (\n      <form>\n        <div className=\"ui form\">\n          <div className=\"field\">\n            <label>{ Lang.get('product.name') }</label>\n            <input placeholder={Lang.get('product.name')} type=\"text\" />\n          </div>\n          <div className=\"two fields\">\n            <div className=\"field\">\n              <label>{ Lang.get('product.sku') }</label>\n              <input placeholder={Lang.get('product.sku')} type=\"text\" />\n            </div>\n            <div className=\"field\">\n              <label>{ Lang.get('product.series') }</label>\n              <input placeholder={Lang.get('product.series')} type=\"text\" />\n            </div>\n          </div>\n          <div className=\"ui submit button\">Submit</div>\n        </div>\n      </form>\n    );\n  }\n});"],"sourceRoot":"/source/"}